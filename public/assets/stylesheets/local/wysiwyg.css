@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i");@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i");@-webkit-keyframes displayNoneToFadeIn {
  0% {
    display: none;
    opacity: 0;
  }.001% {
    display: block;
    opacity: 0;
  }100% {
    display: block;
    opacity: 1;
  }
}@keyframes displayNoneToFadeIn {
  0% {
    display: none;
    opacity: 0;
  }.001% {
    display: block;
    opacity: 0;
  }100% {
    display: block;
    opacity: 1;
  }
}.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
}.visibility-hidden {
  position: absolute;
  z-index: -1;
  width: .1px;
  height: .1px;
  overflow: hidden;
  opacity: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
